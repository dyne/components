{
    "zencode": {
        "execute_zencode": {
            "group": "zencode",
            "contract": "Rule unknown ignore\n\nGiven I send keys 'keys' and send data 'data' and send script 'script' and execute zencode and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"zencode\": \"Scenario 'ecdh': Create the public key\\nGiven I have the 'keyring'\\nWhen I create the ecdh public key\\nThen print the 'ecdh public key'\\n\",\n\t\"data\": {}\n}\n",
            "data": "{\n\t\"keys\": {\n\t\t\"keyring\": {\n\t\t\t\"ecdh\": \"FJ5Esc1koLSH+9pKSdI65tcyH2HowzXMe0UdsqktmZU=\"\n\t\t}\n\t}\n}\n",
            "meta": {
                "title": " execute zencode",
                "highlight": "3"
            }
        }
    },
    "timestamp": {
        "fetch_timestamp": {
            "group": "timestamp",
            "contract": "Rule unknown ignore\n\nGiven I fetch the local timestamp in seconds and output into 'result_in_seconds'\nGiven I fetch the local timestamp in milliseconds and output into 'result_in_milliseconds'\n\nGiven I have a 'string' named 'result_in_seconds'\nGiven I have a 'string' named 'result_in_milliseconds'\nThen print the 'result_in_seconds'\nThen print the 'result_in_milliseconds'\n",
            "keys": "{}\n",
            "data": "{}\n",
            "meta": {
                "title": "fetch the local timestamp",
                "highlight": "3-4"
            }
        }
    },
    "shell": {
        "execute": {
            "group": "shell",
            "contract": "Rule unknown ignore\n\nGiven I send command 'command' and execute in shell and output into 'result'\n\nGiven I have a 'string' named 'result'\nThen print the 'result'\n",
            "keys": "{}\n",
            "data": "{\n\t\"command\": \"ls -a\"\n}\n",
            "meta": {
                "title": "execute in shell",
                "highlight": "3"
            }
        }
    },
    "redis": {
        "write": {
            "group": "redis",
            "contract": "Rule unknown ignore\n\nGiven I connect to 'redis' and send key 'key' and send object 'object' and write object into key in redis and outpuit into 'result'\n\nGiven I have a 'string' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"redis\": \"redis://localhost:6379\"\n}\n",
            "data": "{\n\t\"key\": \"some key\",\n\t\"object\": {\n\t\t\"foo\": \"bar\",\n\t\t\"baz\": \"qux\"\n\t}\n}\n",
            "meta": {
                "title": "write object into key in redis",
                "highlight": "3"
            }
        },
        "read": {
            "group": "redis",
            "contract": "Rule unknown ignore\n\nGiven I connect to 'redis' and send key 'key' and read key from redis and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"redis\": \"redis://localhost:6379\"\n}\n",
            "data": "{\n\t\"key\": \"some key\"\n}\n",
            "meta": {
                "title": "read key from redis",
                "highlight": "3"
            }
        },
        "delete": {
            "group": "redis",
            "contract": "Rule unknown ignore\n\nGiven I connect to 'redis' and send key 'key' and delete key from redis and output into 'result'\n\nGiven I have a 'number' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"redis\": \"redis://localhost:6379\"\n}\n",
            "data": "{\n\t\"key\": \"some key\"\n}\n",
            "meta": {
                "title": "delete key from redis",
                "highlight": "3"
            }
        }
    },
    "qrcode": {
        "qr_code": {
            "group": "qrcode",
            "contract": "Rule unknown ignore\n\nGiven I send text 'text' and create qr code and output into 'result'\n\nGiven I have a 'string' named 'result'\nThen print the 'result'\n",
            "keys": "{}\n",
            "data": "{\n    \"text\": \"Hello World!\"\n}\n",
            "meta": {
                "title": "create qr code",
                "highlight": "3"
            }
        }
    },
    "pocketbase": {
        "update_record": {
            "group": "pocketbase",
            "contract": "Rule unknown ignore\n\nGiven I connect to 'pb_address' and start pb client\nGiven I send my_credentials 'my_credentials' and login\n\nGiven I send update_parameters 'update_parameters' and send record_parameters 'record_parameters' and update record and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"pb_address\": \"http://127.0.0.1:8090\",\n\t\"my_credentials\": {\n\t\t\"email\": \"test@test.eu\",\n\t\t\"password\": \"testtest\"\n\t}\n}\n",
            "data": "{\n\t\"update_parameters\": {\n\t\t\"id\": \"q3vijjsacrn32tk\",\n\t\t\"collection\": \"organizations\",\n\t\t\"record\": {\n\t\t\t\"name\": \"new value for name\"\n\t\t}\n\t},\n\t\"record_parameters\": {\n\t\t\"fields\": \"id, name\"\n\t}\n}\n",
            "meta": {
                "title": "update a record",
                "highlight": "6"
            }
        },
        "start_pb": {
            "group": "pocketbase",
            "contract": "Rule unknown ignore\n\nGiven I connect to 'pb_address' and start pb client and output into 'result'\n# for mobile contracts use instead\n# Given I connect to 'pb_address' and start capacitor pb client and output into 'result'\n\nGiven I have a 'string' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"pb_address\": \"http://127.0.0.1:8090\"\n}\n",
            "data": "{}\n",
            "meta": {
                "title": "start pb client",
                "highlight": "3"
            }
        },
        "send_request": {
            "group": "pocketbase",
            "contract": "Rule unknown ignore\n\nGiven I connect to 'pb_address' and start pb client\n\nGiven I send url 'url' and send send_parameters 'send_parameters' and send request and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"pb_address\": \"http://127.0.0.1:8090\"\n}\n",
            "data": "{\n\t\"url\": \"/api/hello/user\",\n\t\"send_parameters\": {}\n}\n",
            "meta": {
                "title": "send request",
                "highlight": "5"
            }
        },
        "pw_reset": {
            "group": "pocketbase",
            "contract": "Rule unknown ignore\n\nGiven I connect to 'pb_address' and start pb client\nGiven I send my_credentials 'my_credentials' and login\n\nGiven I send email 'email' and ask password reset and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"pb_address\": \"http://127.0.0.1:8090\",\n\t\"my_credentials\": {\n\t\t\"email\": \"test@test.eu\",\n\t\t\"password\": \"testtest\"\n\t}\n}\n",
            "data": "{\n\t\"email\": \"test@test.eu\"\n}\n",
            "meta": {
                "title": "password reset",
                "highlight": "6"
            }
        },
        "login": {
            "group": "pocketbase",
            "contract": "Rule unknown ignore\n\nGiven I connect to 'pb_address' and start pb client\n\nGiven I send my_credentials 'my_credentials' and login and output into 'result'\n\nGiven I have a 'string' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"pb_address\": \"http://127.0.0.1:8090\"\n}\n",
            "data": "{\n\t\"my_credentials\": {\n\t\t\"email\": \"test@test.eu\",\n\t\t\"password\": \"testtest\"\n\t}\n}\n",
            "meta": {
                "title": "login",
                "highlight": "5"
            }
        },
        "get_some_records": {
            "group": "pocketbase",
            "contract": "Rule unknown ignore\n\nGiven I connect to 'pb_address' and start pb client\n\nGiven I send list_parameters 'list_parameters' and get some records and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"pb_address\": \"http://127.0.0.1:8090\"\n}\n",
            "data": "{\n\t\"list_parameters\": {\n\t\t\"type\": \"list\",\n\t\t\"pagination\": {\n\t\t\t\"page\": 2,\n\t\t\t\"perPage\": 20\n\t\t},\n\t\t\"collection\": \"organizations\"\n\t}\n}\n",
            "meta": {
                "title": "get some records",
                "highlight": "5"
            }
        },
        "get_one_record": {
            "group": "pocketbase",
            "contract": "Rule unknown ignore\n\nGiven I connect to 'pb_address' and start pb client\n\nGiven I send show_parameters 'show_parameters' and get one record and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"pb_address\": \"http://127.0.0.1:8090\"\n}\n",
            "data": "{\n\t\"show_parameters\": {\n\t\t\"collection\": \"organizations\",\n\t\t\"id\": \"p7viyzsihrn52uj\",\n\t\t\"fields\": \"name\"\n\t}\n}\n",
            "meta": {
                "title": "get one record",
                "highlight": "5"
            }
        },
        "delete_record": {
            "group": "pocketbase",
            "contract": "Rule unknown ignore\n\nGiven I connect to 'pb_address' and start pb client\nGiven I send my_credentials 'my_credentials' and login\n\nGiven I send delete_parameters 'delete_parameters' and delete record and output into 'result'\n\nGiven I have a 'string' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"pb_address\": \"http://127.0.0.1:8090\",\n\t\"my_credentials\": {\n\t\t\"email\": \"test@test.eu\",\n\t\t\"password\": \"testtest\"\n\t}\n}\n",
            "data": "{\n\t\"delete_parameters\": {\n\t\t\"collection\": \"organizations\",\n\t\t\"id\": \"q3vijjsacrn32tk\"\n\t}\n}\n",
            "meta": {
                "title": "delete a record",
                "highlight": "6"
            }
        },
        "create_record": {
            "group": "pocketbase",
            "contract": "Rule unknown ignore\n\nGiven I connect to 'pb_address' and start pb client\nGiven I send my_credentials 'my_credentials' and login\n\nGiven I send create_parameters 'create_parameters' and send record_parameters 'record_parameters' and create record and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"pb_address\": \"http://127.0.0.1:8090\",\n\t\"my_credentials\": {\n\t\t\"email\": \"test@test.eu\",\n\t\t\"password\": \"testtest\"\n\t}\n}\n",
            "data": "{\n\t\"create_parameters\": {\n\t\t\"collection\": \"organizations\",\n\t\t\"record\": {\n\t\t\t\"name\": \"Jhon org\"\n\t\t}\n\t},\n\t\"record_parameters\": {\n\t\t\"requestKey\": \"testCreate\"\n\t}\n}\n",
            "meta": {
                "title": "create a record",
                "highlight": "6"
            }
        }
    },
    "oauth": {
        "ver_request_params": {
            "group": "oauth",
            "contract": "Rule unknown ignore\n\nGiven I have a 'string' named 'client_id'\nGiven I have a 'string' named 'request_uri'\nGiven I have a 'string dictionary' named 'request'\n\nWhen I set 'body' to 'client_id=' as 'string'\nWhen I append the 'client_id' to 'body'\nWhen I append the string '&request_uri=' to 'body'\nWhen I append the 'request_uri' to 'body'\nWhen I move 'body' in 'request'\n\nThen print the 'request'\n\nThen I send request 'request' and send server_data 'server_data' and verify request parameters\n",
            "keys": "{\n\t\"server_data\": {\n\t\t\"jwk\": {\n\t\t\t\"kty\": \"EC\",\n\t\t\t\"crv\": \"P-256\",\n\t\t\t\"alg\": \"ES256\",\n\t\t\t\"x\": \"SVqB4JcUD6lsfvqMr-OKUNUphdNn64Eay60978ZlL74\",\n\t\t\t\"y\": \"lf0u0pMj4lGAzZix5u4Cm5CMQIgMNpkwy163wtKYVKI\",\n\t\t\t\"d\": \"0g5vAEKzugrXaRbgKG0Tj2qJ5lMP4Bezds1_sTybkfk\"\n\t\t},\n\t\t\"url\": \"https://valid.issuer.url\",\n\t\t\"authentication_url\": \"https://did.dyne.org/dids/\"\n\t}\n}\n",
            "data": "{\n\t\"client_id\": \"did:dyne:sandbox.genericissuer:6Cp8mPUvJmQaMxQPSnNyhb74f9Ga4WqfXCkBneFgikm5\",\n\t\"request_uri\": \"urn:ietf:params:oauth:request_uri:1719239545ed9f269e652d207b90dec394b87225c92346023b\",\n    \"request\": {\n        \"headers\": {\n            \"Authorization\": \"\"\n        }\n    }\n}\n",
            "meta": {
                "title": "verify request parameters",
                "highlight": "15"
            }
        },
        "get_auth_details": {
            "group": "oauth",
            "contract": "Rule unknown ignore\n\nGiven I send token 'token' and send server_data 'server' and get authorization details from token and output into 'result'\n\nGiven I have a 'string array' named 'result'\nThen print data\n",
            "keys": "{\n\t\"server\": {\n\t\t\"url\": \"https://valid.issuer.url\"\n\t}\n}\n",
            "data": "{\n    \"token\": \"eyJhbGciOiJFUzI1NiIsImp3ayI6eyJrdHkiOiJFQyIsIngiOiJ0R3hhcWJYR3JsNm92VC11NXNWMU1vUFRESG5ZTEtZbkNpZzM0NW5zSmc4IiwieSI6IlFOT3RBRzd4Sm52cHlGS2lGdmJJdFBxaVBiN2VZSVMtQlRvU0YwaHM3NTgiLCJjcnYiOiJQLTI1NiJ9fQ.eyJzdWIiOiJjYzA3N2Y4MTcwMWU3NDIxNTQ5ZmU0MjBiNDFiNTUxMjVlZDljNmZlIiwiaWF0IjoxNzE5MjQxMzI3LCJpc3MiOiJodHRwczovL2Rldi5hdXRoei1zZXJ2ZXIxLmZvcmtib21iLmV1L2F1dGh6X3NlcnZlciIsImF1ZCI6ImRpZDpkeW5lOnNhbmRib3guc2lnbnJvb206NEtFeW1XZ0xEVWYxTE5ja2V4WTk2ZGZLejV2SDc5ZGlEZWtnTE1SOUZXcEgiLCJleHAiOjE3MTkyNDQ5Mjd9.xLWyO9DkLnSU-9w_4kzmI-znQAwlYJnBbZXpKqmHNpwnFwJUdK26hmVgIQSy2HcHujKyaXX6unjmFe1P5HyK9A\"\n}\n",
            "meta": {
                "title": "get authorization details",
                "highlight": "3"
            }
        },
        "gen_request_uri": {
            "group": "oauth",
            "contract": "Rule unknown ignore\n\nGiven I send request 'request' and send client 'client' and send server_data 'server_data' and send expires_in 'expires_in' and generate request uri and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"server_data\": {\n\t\t\"jwk\": {\n\t\t\t\"kty\": \"EC\",\n\t\t\t\"crv\": \"P-256\",\n\t\t\t\"alg\": \"ES256\",\n\t\t\t\"x\": \"SVqB4JcUD6lsfvqMr-OKUNUphdNn64Eay60978ZlL74\",\n\t\t\t\"y\": \"lf0u0pMj4lGAzZix5u4Cm5CMQIgMNpkwy163wtKYVKI\",\n\t\t\t\"d\": \"0g5vAEKzugrXaRbgKG0Tj2qJ5lMP4Bezds1_sTybkfk\"\n\t\t},\n\t\t\"url\": \"https://valid.issuer.url\",\n\t\t\"authentication_url\": \"https://did.dyne.org/dids/\"\n\t},\n\t\"expires_in\": 500,\n\t\"request\": {\n\t\t\"body\": \"response_type=code&client_id=did:dyne:sandbox.genericissuer:6Cp8mPUvJmQaMxQPSnNyhb74f9Ga4WqfXCkBneFgikm5&state=xyz&code_challenge=E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM&code_challenge_method=S256&redirect_uri=https%3A%2F%2FWallet.example.org%2Fcb&authorization_details=%5B%7B%22type%22%3A%20%22openid_credential%22%2C%20%22credential_configuration_id%22%3A%20%22Auth1%22%2C%22locations%22%3A%20%5B%22http%3A%2F%2Fissuer1.zenswarm.forkbomb.eu%3A3100%2Fcredential_issuer%2F%22%5D%7D%5D\",\n\t\t\"headers\": {\n\t\t\t\"Authorization\": \"\"\n\t\t}\n\t}\n}\n\n",
            "data": "{\n    \"client\": {\n        \"id\": \"did:dyne:sandbox.genericissuer:6Cp8mPUvJmQaMxQPSnNyhb74f9Ga4WqfXCkBneFgikm5\",\n        \"clientSecret\": \"eyJhbGciOiJFUzI1NiJ9.eyJzdWIiOiJwaXBwbyJ9.hiVPL2JTdmcZY7Vcso95KUBEzcTGvmvQ7wlwkCo0G74Unpzny2drvLsu-HzHWyckKbRjwWox-V5gqqKeka8kEQ\",\n        \"grants\": [\"authorization_code\"],\n        \"redirectUris\": [\"https://Wallet.example.org/cb\"],\n        \"scope\": [\"Auth1\"],\n        \"resource\": \"http://issuer1.zenswarm.forkbomb.eu/credential_issuer\"\n    }\n}\n",
            "meta": {
                "title": "generate request uri",
                "highlight": "3"
            }
        },
        "gen_auth_code": {
            "group": "oauth",
            "contract": "Rule unknown ignore\n\nGiven I send request 'request' and send server_data 'server' and generate authorization code and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"server_data\": {\n\t\t\"jwk\": {\n\t\t\t\"kty\": \"EC\",\n\t\t\t\"crv\": \"P-256\",\n\t\t\t\"alg\": \"ES256\",\n\t\t\t\"x\": \"SVqB4JcUD6lsfvqMr-OKUNUphdNn64Eay60978ZlL74\",\n\t\t\t\"y\": \"lf0u0pMj4lGAzZix5u4Cm5CMQIgMNpkwy163wtKYVKI\",\n\t\t\t\"d\": \"0g5vAEKzugrXaRbgKG0Tj2qJ5lMP4Bezds1_sTybkfk\"\n\t\t},\n\t\t\"url\": \"https://valid.issuer.url\",\n\t\t\"authentication_url\": \"https://did.dyne.org/dids/\"\n\t}\n}\n",
            "data": "{\n\t\"request\": {\n\t\t\"body\": \"client_id=did%3Adyne%3Asandbox%2Egenericissuer%3A6Cp8mPUvJmQaMxQPSnNyhb74f9Ga4WqfXCkBneFgikm5&request_uri=urn%3Aietf%3Aparams%3Aoauth%3Arequest_uri%3A1719239545ed9f269e652d207b90dec394b87225c92346023b\",\n        \"headers\": {\n            \"Authorization\": \"\"\n        }\n    }\n}\n",
            "meta": {
                "title": "generate authorization code",
                "highlight": "3"
            }
        },
        "gen_access_token": {
            "group": "oauth",
            "contract": "Rule unknown ignore\nScenario 'http': url encode\n\nGiven I have a 'string dictionary' named 'json_body'\nGiven I have a 'string dictionary' named 'request'\n\nWhen I create the http get parameters from 'json_body' using percent encoding\nWhen I move 'json_body' to 'body' in 'request'\n\nThen print the 'request'\n\nThen I send request 'request' and send server_data 'server_data' and generate access token and output into 'result'\n",
            "keys": "{\n\t\"server_data\": {\n\t\t\"jwk\": {\n\t\t\t\"kty\": \"EC\",\n\t\t\t\"crv\": \"P-256\",\n\t\t\t\"alg\": \"ES256\",\n\t\t\t\"x\": \"SVqB4JcUD6lsfvqMr-OKUNUphdNn64Eay60978ZlL74\",\n\t\t\t\"y\": \"lf0u0pMj4lGAzZix5u4Cm5CMQIgMNpkwy163wtKYVKI\",\n\t\t\t\"d\": \"0g5vAEKzugrXaRbgKG0Tj2qJ5lMP4Bezds1_sTybkfk\"\n\t\t},\n\t\t\"url\": \"https://valid.issuer.url\",\n\t\t\"authentication_url\": \"https://did.dyne.org/dids/\"\n\t}\n}\n",
            "data": "{\n\t\"json_body\": {\n\t\t\"grant_type\": \"authorization_code\",\n\t\t\"client_id\": \"did:dyne:sandbox.genericissuer:6Cp8mPUvJmQaMxQPSnNyhb74f9Ga4WqfXCkBneFgikm5\",\n\t\t\"code_verifier\": \"dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk\",\n\t\t\"redirect_uri\": \"https://Wallet.example.org/cb\",\n\t\t\"code\": \"eyJhbGciOiJFUzI1NiIsImp3ayI6eyJrdHkiOiJFQyIsIngiOiJ0R3hhcWJYR3JsNm92VC11NXNWMU1vUFRESG5ZTEtZbkNpZzM0NW5zSmc4IiwieSI6IlFOT3RBRzd4Sm52cHlGS2lGdmJJdFBxaVBiN2VZSVMtQlRvU0YwaHM3NTgiLCJjcnYiOiJQLTI1NiJ9fQ.eyJzdWIiOiI1NDJiYWNjODAyMDUxZTdhYjBjMWZhNDAxZjAwYzhjNWJjN2Y0NzVhIiwiaWF0IjoxNzE5MjQxMTYzLCJpc3MiOiJodHRwczovL2Rldi5hdXRoei1zZXJ2ZXIxLmZvcmtib21iLmV1L2F1dGh6X3NlcnZlciIsImF1ZCI6ImRpZDpkeW5lOnNhbmRib3guc2lnbnJvb206NEtFeW1XZ0xEVWYxTE5ja2V4WTk2ZGZLejV2SDc5ZGlEZWtnTE1SOUZXcEgiLCJleHAiOjE3MTkyNDQ3NjJ9.1OhQ5FKXuh_QWxm4XMufNqFS2Zkql7bmBzfMuT8GzVEil3HzYM7dAwUo5Zl9shu-w7bEGlKkOIhXssVrMeMlXg\"\n\t},\n\t\"request\": {\n\t\t\"headers\": {\n\t\t\t\"content-length\": 42,\n\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\",\n\t\t\t\"DPoP\": \"eyJhbGciOiJFUzI1NiIsImp3ayI6eyJjcnYiOiJQLTI1NiIsImt0eSI6IkVDIiwieCI6InpKLTR1d0VWVlYxQW9GcW1yZVlzUlh1SjhGbzVHRVVUeTZ0aklBdjdUcFkiLCJ5IjoiVm9YdmEzVEpHc0o5bjlZVzV3MGplMHp6U2hmYnN3QWd6SHI1TEZCSDNsZyJ9LCJ0eXAiOiJkcG9wK2p3dCJ9.eyJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cHM6Ly9kZXYuYXV0aHotc2VydmVyMS5mb3JrYm9tYi5ldS9hdXRoel9zZXJ2ZXIvdG9rZW4iLCJpYXQiOjE3MTkyNDEzMjYsImp0aSI6IkFad0VwZ2tOTlhrbllWT1JZbjNYNW9HVW1iTVp3V3d1UF9xSDNnOFRjbHcifQ.X2sO6h3GUcTu0h_qNyOsXEB2Z3qzPUd1azOJIeMmfH4zIk-Hd8sHm1RG2RaxZ3n22qSDbKjBap2G9U3Kjw5gLA\"\n\t\t}\n\t}\n}\n",
            "meta": {
                "title": "generate access token",
                "highlight": "12"
            }
        },
        "add_data": {
            "group": "oauth",
            "contract": "Rule unknown ignore\n\nGiven I send request_uri 'request_uri' and send data 'data' and send server_data 'server' and add data to authorization details and output into 'result'\n\nGiven I have a 'string array' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"server_data\": {\n\t\t\"jwk\": {\n\t\t\t\"kty\": \"EC\",\n\t\t\t\"crv\": \"P-256\",\n\t\t\t\"alg\": \"ES256\",\n\t\t\t\"x\": \"SVqB4JcUD6lsfvqMr-OKUNUphdNn64Eay60978ZlL74\",\n\t\t\t\"y\": \"lf0u0pMj4lGAzZix5u4Cm5CMQIgMNpkwy163wtKYVKI\",\n\t\t\t\"d\": \"0g5vAEKzugrXaRbgKG0Tj2qJ5lMP4Bezds1_sTybkfk\"\n\t\t},\n\t\t\"url\": \"https://valid.issuer.url\",\n\t\t\"authentication_url\": \"https://did.dyne.org/dids/\"\n\t}\n}\n",
            "data": "{\n\t\"request_uri\": \"urn:ietf:params:oauth:request_uri:1719239545ed9f269e652d207b90dec394b87225c92346023b\",\n\t\"data\": {\n\t\t\"email\": \"email@example.com\"\n\t}\n}\n",
            "meta": {
                "title": "add data to authorization details",
                "highlight": "3"
            }
        }
    },
    "json-schema": {
        "validate": {
            "group": "json-schema",
            "contract": "Rule unknown ignore\n\nGiven I send json_data 'json_data' and send json_schema 'json_schema' and validate json and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"json_schema\": {\n\t\t\"type\": \"object\",\n\t\t\"properties\": {\n\t\t\t\"first_name\": {\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t\"last_name\": {\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t},\n\t\t\"required\": [\n\t\t\t\"first_name\",\n\t\t\t\"last_name\"\n\t\t]\n\t}\n}\n",
            "data": "{\n    \"json_data\": {\n        \"first_name\": \"Jhon\",\n        \"last_name\": \"Doe\"\n    }\n}\n",
            "meta": {
                "title": "validate json",
                "highlight": "3"
            }
        }
    },
    "http": {
        "post_with_headers": {
            "group": "http",
            "contract": "Rule unknown ignore\nGiven I connect to 'address' and send object 'body' and send headers 'headers' and do post and output into 'result'\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"address\": \"https://dyne.org/slangroom\"\n}\n",
            "data": "{\n\t\"body\": {\n\t\t\"hello\": \"world\"\n\t},\n\t\"headers\": {\n\t\t\"Content-Type\": \"application/json\"\n\t}\n}\n",
            "meta": {
                "title": "http post with header",
                "highlight": "2"
            }
        },
        "post": {
            "group": "http",
            "contract": "Rule unknown ignore\nGiven I connect to 'address' and send object 'body' and do post and output into 'result'\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"address\": \"https://dyne.org/slangroom\"\n}\n",
            "data": "{\n\t\"body\": {\n\t\t\"hello\": \"world\"\n\t}\n}\n",
            "meta": {
                "title": "http post",
                "highlight": "2"
            }
        },
        "get_with_headers": {
            "group": "http",
            "contract": "Rule unknown ignore\nGiven I connect to 'address' and send headers 'headers' and do get and output into 'result'\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"address\": \"https://dyne.org/slangroom\"\n}\n",
            "data": "{\n\t\"headers\": {\n\t\t\"Content-Type\": \"application/json\"\n\t}\n}\n",
            "meta": {
                "title": "http get with headers",
                "highlight": "2"
            }
        },
        "get": {
            "group": "http",
            "contract": "Rule unknown ignore\nGiven I connect to 'address' and do get and output into 'result'\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"secret\": \"foo\"\n}\n",
            "data": "{\n\t\"address\": \"https://dyne.org/slangroom\"\n}\n",
            "meta": {
                "title": "http get",
                "highlight": "2"
            }
        }
    },
    "helpers": {
        "set": {
            "group": "helpers",
            "contract": "Rule unknown ignore\n\nGiven I send object 'object' and send path 'path' and send value 'value' and manipulate and set\n\nGiven I have a 'string dictionary' named 'object'\nThen print 'mimmo'\n",
            "keys": "{\n\t\"path\": \"root.element\"\n}\n",
            "data": "{\n\t\"value\": { \"name\": \"Jhon\" },\n\t\"object\": {\n\t\t\"surname\": \"Doe\"\n\t}\n}\n",
            "meta": {
                "title": "manipulate and set",
                "highlight": "3"
            }
        },
        "pick": {
            "group": "helpers",
            "contract": "Rule unknown ignore\n\nGiven I send object 'object' and send properties 'properties' and manipulate and pick and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the data\n",
            "keys": "{\n\t\"properties\": [\n\t\t\"name\",\n\t\t\"personal_information.email.first\"\n\t]\n}\n",
            "data": "{\n\t\"object\": {\n\t\t\"name\": \"Jhon\",\n\t\t\"personal_information\": {\n\t\t\t\"email\": {\n\t\t\t\t\"frist\": \"example@example.org\",\n\t\t\t\t\"second\": \"email@example.org\"\n\t\t\t},\n\t\t\t\"phone\": \"3338957823\"\n\t\t}\n\t}\n}\n",
            "meta": {
                "title": "manipulate and pick",
                "highlight": "3"
            }
        },
        "omit": {
            "group": "helpers",
            "contract": "Rule unknown ignore\n\nGiven I send object 'object' and send paths 'paths' and manipulate and omit and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the data\n",
            "keys": "{\n\t\"path\": [\n\t\t\"names.third\",\n\t\t\"surnames.second\"\n\t]\n}\n",
            "data": "{\n\t\"object\": {\n\t\t\"names\": {\n\t\t\t\"first\": \"Bella\",\n\t\t\t\"third\": \"Owen\"\n\t\t},\n\t\t\"surnames\": {\n\t\t\t\"first\": \"Allen\",\n\t\t\t\"second\": \"Briggs\"\n\t\t}\n\t}\n}\n",
            "meta": {
                "title": "manipulate and omit",
                "highlight": "3"
            }
        },
        "merge": {
            "group": "helpers",
            "contract": "Rule unknown ignore\n\nGiven I send object 'object' and send sources 'sources' and manipulate and merge and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the data\n",
            "keys": "{\n\t\"sources\": [\n\t\t{\n\t\t\t\"names\": {\n\t\t\t\t\"second\": \"Jhon\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"surnames\": {\n\t\t\t\t\"third\": \"Doe\"\n\t\t\t}\n\t\t}\n\t]\n}\n",
            "data": "{\n\t\"object\": {\n\t\t\"names\": {\n\t\t\t\"first\": \"Bella\",\n\t\t\t\"third\": \"Owen\"\n\t\t},\n\t\t\"surnames\": {\n\t\t\t\"first\": \"Allen\",\n\t\t\t\"second\": \"Briggs\"\n\t\t}\n\t}\n}\n",
            "meta": {
                "title": "manipulate and merge",
                "highlight": "3"
            }
        },
        "concat": {
            "group": "helpers",
            "contract": "Rule unknown ignore\n\nGiven I send array 'array' and send values 'values' and manipulate and concat and output into 'result'\n\nGiven I have a 'string array' named 'result'\nThen print the data\n",
            "keys": "{\n\t\"values\": [\n\t\t\"third\",\n\t\t\"foruth\",\n\t\t\"fifth\"\n\t]\n}\n",
            "data": "{\n    \"array\": [\n\t\t\"first\",\n\t\t\"second\"\n\t]\n}\n",
            "meta": {
                "title": "manipulate and concat",
                "highlight": "3"
            }
        },
        "compact": {
            "group": "helpers",
            "contract": "Rule unknown ignore\n\nGiven I send array 'array' and manipulate and compact and output into 'result'\n\nGiven I have a 'string array' named 'result'\nThen print the data\n",
            "keys": "{}\n",
            "data": "{\n\t\"the_array\": [\n\t\t0,\n\t\t\"c\",\n\t\tfalse,\n\t\t\"d\",\n\t\t\"\"\n\t]\n}\n",
            "meta": {
                "title": "manipulate and compact",
                "highlight": "3"
            }
        }
    },
    "git": {
        "verify_git": {
            "group": "git",
            "contract": "Rule unknown ignore\n\nGiven I open 'path' and verify git repository\n\nGiven I have a 'string' named 'verified_git_repo'\nThen print data\n",
            "keys": "{\n    \"path\": \"path/to/repository\"\n}\n",
            "data": "{\n\t\"verified_git_repo\": \"true\"\n}\n",
            "meta": {
                "title": "verify git repository",
                "highlight": "3"
            }
        },
        "commit": {
            "group": "git",
            "contract": "Rule unknown ignore\n\nGiven I open 'path' and send commit 'commit' and create new git commit and output into 'commit_hash'\n\nGiven I have a 'string' named 'commit hash'\nThen print the data\n",
            "keys": "{\n\t\"path\": \"slangroom\"\n}\n",
            "data": "{\n\t\"commit\": {\n\t\t\"author\": \"Jhon Doe\",\n\t\t\"message\": \"docs: update readme\",\n\t\t\"email\": \"jhon.doe@example.com\",\n\t\t\"files\": [ \"README.md\" ]\n\t},\n}\n",
            "meta": {
                "title": "create new git commit",
                "highlight": "3"
            }
        },
        "clone_repository": {
            "group": "git",
            "contract": "Rule unknown ignore\n\nGiven I connect to 'url' and send path 'path' and clone repository\n\nGiven I have a 'string' named 'cloned_repository'\nThen print the data\n",
            "keys": "{\n\t\"url\": \"https://github.com/dyne/slangroom\",\n\t\"path\": \"slangroom\"\n}\n",
            "data": "{\n\t\"cloned_repository\": \"true\"\n}\n",
            "meta": {
                "title": "clone repository",
                "highlight": "3"
            }
        }
    },
    "fs": {
        "store": {
            "group": "fs",
            "contract": "Rule unknown ignore\nGiven I have a 'string' named 'file_path'\nWhen I create the random object of '128' bits\nThen print the 'random_object'\nThen print the 'file_path'\nThen I send path 'file_path' and send content 'random_object' and store in file\n",
            "keys": "{}\n",
            "data": "{\n\t\"file_path\": \"path/to/file/from/FILES_DIR\"\n}\n",
            "meta": {
                "title": "store in file",
                "highlight": "6"
            }
        },
        "read_verbatim": {
            "group": "fs",
            "contract": "Rule unknown ignore\nGiven I send path 'file_path' and read verbatim file content and output into 'file_content'\nGiven I have a 'string' named 'file_content'\nThen print the 'file_content'\n",
            "keys": "{}\n",
            "data": "{\n\t\"file_path\": \"path/to/file/from/FILES_DIR\"\n}\n",
            "meta": {
                "title": "read string file",
                "highlight": "2"
            }
        },
        "read_json": {
            "group": "fs",
            "contract": "Rule unknown ignore\nGiven I send path 'file_path' and read file content and output into 'file_content'\nGiven I have a 'string dictionay' named 'file_content'\nThen print the 'file_content'\n",
            "keys": "{}\n",
            "data": "{\n\t\"file_path\": \"path/to/file/from/FILES_DIR\"\n}\n",
            "meta": {
                "title": "read json file",
                "highlight": "2"
            }
        },
        "ls": {
            "group": "fs",
            "contract": "Rule unknown ignore\nGiven I send path 'directory_path' and list directory content and output into 'directory_content'\nGiven I have a 'string array' named 'directory_content'\nThen print the 'directory_content'\n",
            "keys": "{}\n",
            "data": "{\n\t\"directory_path\": \"path/to/directory/from/FILES_DIR\"\n}\n",
            "meta": {
                "title": "list a directory content",
                "highlight": "2"
            }
        },
        "exist": {
            "group": "fs",
            "contract": "Rule unknown ignore\nGiven I send path 'file_path_1' and verify file exists\nGiven I send path 'file_path_2' and verify file does not exist\nGiven I have a 'string' named 'file_path_1'\nThen print the 'file_path_1'\n",
            "keys": "{}\n",
            "data": "{\n\t\"file_path_1\": \"path/to/file/that/should/exists/from/FILES_DIR\",\n\t\"file_path_2\": \"path/to/file/that/should/not/exists/from/FILES_DIR\"\n}\n",
            "meta": {
                "title": "verify file exists or does not exist",
                "highlight": "2,3"
            }
        }
    },
    "ethereum": {
        "read_tx_id": {
            "group": "ethereum",
            "contract": "Rule unknown ignore\n\nGiven I connect to 'ethereum' and send transaction 'signed_transaction' and read the ethereum transaction id after broadcast and output into 'transaction_id'\n\nGiven I have a 'string' named 'transaction_id'\nThen print the data\n",
            "keys": "{\n\t\"ethereum\": \"http://78.47.38.223:9485\"\n}\n",
            "data": "{\n    \"signed_transaction\": \"f8ee8085174876e800830493e094e54c7b475644fbd918cfedc57b1c9179939921e680b884b374012b0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003354686973206973206d7920666972737420646174612073746f726564206f6e20657468657265756d20626c6f636b636861696e0000000000000000000000000084ccc2c50ca0776b58c34145c9553b5235fe211a6237c48b90b4784bc6d86660b0236af3bab2a07b57259d71f12666d962eb7a06b2b8332323a614071d0b39c35181b2aee04b8e\"\n}\n",
            "meta": {
                "title": "read the ethereum transaction id after broadcast",
                "highlight": "3"
            }
        },
        "read_nonce": {
            "group": "ethereum",
            "contract": "Rule unknown ignore\nScenario 'ethereum': read nonce\n\nGiven I connect to 'ethereum' and send address 'address' and read the ethereum nonce and output into 'ethereum_nonce'\n\nGiven I have a 'ethereum nonce'\nThen print the 'ethereum_nonce'\n",
            "keys": "{\n\t\"ethereum\": \"http://78.47.38.223:9485\"\n}\n",
            "data": "{\n\t\"address\": \"0x7d6df85bDBCe99151c813fd1DDE6BC007c523C27\"\n}\n",
            "meta": {
                "title": "read the ethereum nonce",
                "highlight": "4"
            }
        },
        "read_gas": {
            "group": "ethereum",
            "contract": "Rule unknown ignore\nScenario 'ethereum': read gas price\n\nGiven I connect to 'ethereum' and read the ethereum suggested gas price and output into 'gas_price'\n\nGiven I have a 'gas price'\nThen print the data\n",
            "keys": "{\n\t\"ethereum\": \"http://78.47.38.223:9485\"\n}\n",
            "data": "{}\n",
            "meta": {
                "title": "read the ethereum suggested gas price",
                "highlight": "4"
            }
        },
        "read_bytes": {
            "group": "ethereum",
            "contract": "Rule unknown ignore\nScenario 'ethereum': read transaction\n\nGiven I connect to 'ethereum' and send transaction_id 'tag' and read the ethereum bytes and output into 'hex_result'\n\nGiven I have a 'hex' named 'hex_result'\nWhen I create the string from the ethereum bytes named 'hex_result'\nWhen I rename the 'string' to 'string_result'\nThen print data\n",
            "keys": "{\n\t\"ethereum\": \"http://78.47.38.223:9485\"\n}\n",
            "data": "{\n\t\"tag\": \"0467636a2557a1ccdaf10ce17ee74340096c510acfa9181c85756d43a8bed522\"\n}\n",
            "meta": {
                "title": "read the ethereum transaction body",
                "highlight": "4"
            }
        },
        "read_balance": {
            "group": "ethereum",
            "contract": "Rule unknown ignore\n\nGiven I connect to 'ethereum' and send address 'address' and read the ethereum balance and output into 'balance'\nGiven I connect to 'ethereum' and send addresses 'addresses' and read the ethereum balance and output into 'balances'\n\nGiven I have a 'string' named 'balance'\nGiven I have a 'string array' named 'balances'\nThen print the data\n",
            "keys": "{\n\t\"ethereum\": \"http://78.47.38.223:9485\"\n}\n",
            "data": "{\n\t\"address\": \"0x2D010920b43aFb54f8d5fB51c9354FbC674b28Fc\",\n\t\"addresses\": [\n\t\t\"0xc32510251F77382bb9214144D2c488408Ec2047C\",\n\t\t\"0xFf02577F140557190693cFf549025e66119FEA52\",\n\t\t\"0x4743879F5e9dc3fcE41E30380365441E8D14CCEc\"\n    ]\n}\n",
            "meta": {
                "title": "read the ethereum balance",
                "highlight": "3-4"
            }
        },
        "complex": {
            "group": "ethereum",
            "contract": "Rule unknown ignore\nScenario 'ethereum': Store an object on eth\n\nGiven I connect to 'ethereum' and send address 'address' and read the ethereum nonce and output into 'ethereum_nonce'\nGiven I connect to 'ethereum' and read the suggested gas price and output into 'gas_price'\n\n# from slangroom\nGiven I have a 'ethereum nonce'\nGiven I have a 'gas price'\n\n# from keys\nGiven I have the 'keyring'\n\n# from data\nGiven I have a 'ethereum address' named 'storage contract'\nGiven I have a 'string' named 'to be stored'\nGiven I have a 'gas limit'\n\n# create the signed transaction to store the data\nWhen I create the ethereum transaction to 'storage contract'\nWhen I use the ethereum transaction to store 'to be stored'\nWhen I create the signed ethereum transaction for chain 'fabt'\n\nThen print the 'signed ethereum transaction'\n\nThen I connect to 'ethereum' and send transaction 'signed_ethereum_transaction' and read the ethereum transaction id after broadcast and output into 'transaction_id'\n",
            "keys": "{\n\t\"ethereum\": \"http://78.47.38.223:9485\",\n\t\"keyring\": {\n\t\t\"ethereum\": \"078ad84d6c7a50c6dcd983d644da65e30d8cea063d8ea49aeb7ee7f0aaf6a4f7\"\n\t}\n}\n",
            "data": "{\n    \"gas_limit\": \"100000\",\n\t\"storage_contract\": \"0x662c4017C01bA23c94257289Dab8C2757b472B81\",\n\t\"to_be_srtored\": \"Some data\",\n}\n",
            "meta": {
                "title": "complex example",
                "highlight": "4,5,26"
            }
        }
    },
    "db": {
        "sql_statement_with_params": {
            "group": "db",
            "contract": "Rule unknown ignore\n\nGiven I connect to 'database' and send statement 'statement' and send parameters 'parameters'  and execute sql statement with parameters and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"database\": \"sqlite://user:password@url/to/your/db\"\n}\n",
            "data": "{\n\t\"statement\": \"INSERT INTO table (name) VALUES (?)\",\n\t\"params\": [\"John Doe\"]\n}\n",
            "meta": {
                "title": "execute generic sql statements with parameters",
                "highlight": "3"
            }
        },
        "sql_statement": {
            "group": "db",
            "contract": "Rule unknown ignore\n\nGiven I connect to 'database' and send statement 'statement' and execute sql statement and output into 'result'\n\nGiven I have a 'string array' named 'result'\nThen print all data\n",
            "keys": "{\n\t\"database\": \"sqlite://user:password@url/to/your/db\"\n}\n",
            "data": "{\n    \"statement\": \"SELECT * FROM table\"\n}\n",
            "meta": {
                "title": "execute generic sql statements",
                "highlight": "3"
            }
        },
        "save_to_table": {
            "group": "db",
            "contract": "Rule unknown ignore\n\nGiven I have a 'string' named 'database'\nGiven I have a 'string' named 'table'\nWhen I set 'variable' to 'value to be stored' as 'string'\nWhen I set 'name' to 'key under which save the variable' as 'string'\nThen print the 'database'\nThen print the 'variable'\nThen print the 'name'\nThen print the 'table'\n\nThen I connect to 'database' and send variable 'variable' and send name 'name' and send table 'table' and save the variable in the database table\n",
            "keys": "{\n\t\"database\": \"sqlite://user:password@url/to/your/db\"\n}\n",
            "data": "{\n    \"table\": \"table\"\n}\n",
            "meta": {
                "title": "save a variable in a database table",
                "highlight": "12"
            }
        },
        "read_from_table": {
            "group": "db",
            "contract": "Rule unknown ignore\n\nGiven I connect to 'database' and send record 'id' and send table 'table' and read the record of the table and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
            "keys": "{\n\t\"database\": \"sqlite://user:password@url/to/your/db\"\n}\n",
            "data": "{\n\t\"id\": 1,\n\t\"table\": \"table\"\n}\n",
            "meta": {
                "title": "read a record from a table",
                "highlight": "3"
            }
        }
    }
}