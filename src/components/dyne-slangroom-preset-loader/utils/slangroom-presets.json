[
    {
        "name": "read_tx_id",
        "contract": "Rule unknown ignore\n\nGiven I connect to 'ethereum' and send transaction 'signed_transaction' and read the ethereum transaction id after broadcast and output into 'transaction_id'\n\nGiven I have a 'string' named 'transaction_id'\nThen print the data\n",
        "keys": "{\n\t\"ethereum\": \"http://78.47.38.223:9485\"\n}\n",
        "data": "{\n    \"signed_transaction\": \"f8ee8085174876e800830493e094e54c7b475644fbd918cfedc57b1c9179939921e680b884b374012b0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003354686973206973206d7920666972737420646174612073746f726564206f6e20657468657265756d20626c6f636b636861696e0000000000000000000000000084ccc2c50ca0776b58c34145c9553b5235fe211a6237c48b90b4784bc6d86660b0236af3bab2a07b57259d71f12666d962eb7a06b2b8332323a614071d0b39c35181b2aee04b8e\"\n}\n",
        "meta": {
            "title": "read the ethereum transaction id after broadcast",
            "highlight": "3"
        },
        "group": "ethereum"
    },
    {
        "name": "read_nonce",
        "contract": "Rule unknown ignore\nScenario 'ethereum': read nonce\n\nGiven I connect to 'ethereum' and send address 'address' and read the ethereum nonce and output into 'ethereum_nonce'\n\nGiven I have a 'ethereum nonce'\nThen print the 'ethereum_nonce'\n",
        "keys": "{\n\t\"ethereum\": \"http://78.47.38.223:9485\"\n}\n",
        "data": "{\n\t\"address\": \"0x7d6df85bDBCe99151c813fd1DDE6BC007c523C27\"\n}\n",
        "meta": {
            "title": "read the ethereum nonce",
            "highlight": "4"
        },
        "group": "ethereum"
    },
    {
        "name": "read_gas",
        "contract": "Rule unknown ignore\nScenario 'ethereum': read gas price\n\nGiven I connect to 'ethereum' and read the ethereum suggested gas price and output into 'gas_price'\n\nGiven I have a 'gas price'\nThen print the data\n",
        "keys": "{\n\t\"ethereum\": \"http://78.47.38.223:9485\"\n}\n",
        "data": "{}\n",
        "meta": {
            "title": "read the ethereum suggested gas price",
            "highlight": "4"
        },
        "group": "ethereum"
    },
    {
        "name": "read_bytes",
        "contract": "Rule unknown ignore\nScenario 'ethereum': read transaction\n\nGiven I connect to 'ethereum' and send transaction_id 'tag' and read the ethereum bytes and output into 'hex_result'\n\nGiven I have a 'hex' named 'hex_result'\nWhen I create the string from the ethereum bytes named 'hex_result'\nWhen I rename the 'string' to 'string_result'\nThen print data\n",
        "keys": "{\n\t\"ethereum\": \"http://78.47.38.223:9485\"\n}\n",
        "data": "{\n\t\"tag\": \"0467636a2557a1ccdaf10ce17ee74340096c510acfa9181c85756d43a8bed522\"\n}\n",
        "meta": {
            "title": "read the ethereum transaction body",
            "highlight": "4"
        },
        "group": "ethereum"
    },
    {
        "name": "read_balance",
        "contract": "Rule unknown ignore\n\nGiven I connect to 'ethereum' and send address 'address' and read the ethereum balance and output into 'balance'\nGiven I connect to 'ethereum' and send addresses 'addresses' and read the ethereum balance and output into 'balances'\n\nGiven I have a 'string' named 'balance'\nGiven I have a 'string array' named 'balances'\nThen print the data\n",
        "keys": "{\n\t\"ethereum\": \"http://78.47.38.223:9485\"\n}\n",
        "data": "{\n\t\"address\": \"0x2D010920b43aFb54f8d5fB51c9354FbC674b28Fc\",\n\t\"addresses\": [\n\t\t\"0xc32510251F77382bb9214144D2c488408Ec2047C\",\n\t\t\"0xFf02577F140557190693cFf549025e66119FEA52\",\n\t\t\"0x4743879F5e9dc3fcE41E30380365441E8D14CCEc\"\n    ]\n}\n",
        "meta": {
            "title": "read the ethereum balance",
            "highlight": "3-4"
        },
        "group": "ethereum"
    },
    {
        "name": "complex",
        "contract": "Rule unknown ignore\nScenario 'ethereum': Store an object on eth\n\nGiven I connect to 'ethereum' and send address 'address' and read the ethereum nonce and output into 'ethereum_nonce'\nGiven I connect to 'ethereum' and read the suggested gas price and output into 'gas_price'\n\n# from slangroom\nGiven I have a 'ethereum nonce'\nGiven I have a 'gas price'\n\n# from keys\nGiven I have the 'keyring'\n\n# from data\nGiven I have a 'ethereum address' named 'storage contract'\nGiven I have a 'string' named 'to be stored'\nGiven I have a 'gas limit'\n\n# create the signed transaction to store the data\nWhen I create the ethereum transaction to 'storage contract'\nWhen I use the ethereum transaction to store 'to be stored'\nWhen I create the signed ethereum transaction for chain 'fabt'\n\nThen print the 'signed ethereum transaction'\n\nThen I connect to 'ethereum' and send transaction 'signed_ethereum_transaction' and read the ethereum transaction id after broadcast and output into 'transaction_id'\n",
        "keys": "{\n\t\"ethereum\": \"http://78.47.38.223:9485\",\n\t\"keyring\": {\n\t\t\"ethereum\": \"078ad84d6c7a50c6dcd983d644da65e30d8cea063d8ea49aeb7ee7f0aaf6a4f7\"\n\t}\n}\n",
        "data": "{\n    \"gas_limit\": \"100000\",\n\t\"storage_contract\": \"0x662c4017C01bA23c94257289Dab8C2757b472B81\",\n\t\"to_be_srtored\": \"Some data\",\n}\n",
        "meta": {
            "title": "complex example",
            "highlight": "4,5,26"
        },
        "group": "ethereum"
    },
    {
        "name": "store",
        "contract": "Rule unknown ignore\nGiven I have a 'string' named 'file_path'\nWhen I create the random object of '128' bits\nThen print the 'random_object'\nThen print the 'file_path'\nThen I send path 'file_path' and send content 'random_object' and store in file\n",
        "keys": "{}\n",
        "data": "{\n\t\"file_path\": \"path/to/file/from/FILES_DIR\"\n}\n",
        "meta": {
            "title": "store in file",
            "highlight": "6"
        },
        "group": "fs"
    },
    {
        "name": "read_verbatim",
        "contract": "Rule unknown ignore\nGiven I send path 'file_path' and read verbatim file content and output into 'file_content'\nGiven I have a 'string' named 'file_content'\nThen print the 'file_content'\n",
        "keys": "{}\n",
        "data": "{\n\t\"file_path\": \"path/to/file/from/FILES_DIR\"\n}\n",
        "meta": {
            "title": "read string file",
            "highlight": "2"
        },
        "group": "fs"
    },
    {
        "name": "read_json",
        "contract": "Rule unknown ignore\nGiven I send path 'file_path' and read file content and output into 'file_content'\nGiven I have a 'string dictionay' named 'file_content'\nThen print the 'file_content'\n",
        "keys": "{}\n",
        "data": "{\n\t\"file_path\": \"path/to/file/from/FILES_DIR\"\n}\n",
        "meta": {
            "title": "read json file",
            "highlight": "2"
        },
        "group": "fs"
    },
    {
        "name": "ls",
        "contract": "Rule unknown ignore\nGiven I send path 'directory_path' and list directory content and output into 'directory_content'\nGiven I have a 'string array' named 'directory_content'\nThen print the 'directory_content'\n",
        "keys": "{}\n",
        "data": "{\n\t\"directory_path\": \"path/to/directory/from/FILES_DIR\"\n}\n",
        "meta": {
            "title": "list a directory content",
            "highlight": "2"
        },
        "group": "fs"
    },
    {
        "name": "exist",
        "contract": "Rule unknown ignore\nGiven I send path 'file_path_1' and verify file exists\nGiven I send path 'file_path_2' and verify file does not exist\nGiven I have a 'string' named 'file_path_1'\nThen print the 'file_path_1'\n",
        "keys": "{}\n",
        "data": "{\n\t\"file_path_1\": \"path/to/file/that/should/exists/from/FILES_DIR\",\n\t\"file_path_2\": \"path/to/file/that/should/not/exists/from/FILES_DIR\"\n}\n",
        "meta": {
            "title": "verify file exists or does not exist",
            "highlight": "2,3"
        },
        "group": "fs"
    },
    {
        "name": "verify_git",
        "contract": "Rule unknown ignore\n\nGiven I open 'path' and verify git repository\n\nGiven I have a 'string' named 'verified_git_repo'\nThen print data\n",
        "keys": "{\n    \"path\": \"path/to/repository\"\n}\n",
        "data": "{\n\t\"verified_git_repo\": \"true\"\n}\n",
        "meta": {
            "title": "verify git repository",
            "highlight": "3"
        },
        "group": "git"
    },
    {
        "name": "commit",
        "contract": "Rule unknown ignore\n\nGiven I open 'path' and send commit 'commit' and create new git commit and output into 'commit_hash'\n\nGiven I have a 'string' named 'commit hash'\nThen print the data\n",
        "keys": "{\n\t\"path\": \"slangroom\"\n}\n",
        "data": "{\n\t\"commit\": {\n\t\t\"author\": \"Jhon Doe\",\n\t\t\"message\": \"docs: update readme\",\n\t\t\"email\": \"jhon.doe@example.com\",\n\t\t\"files\": [ \"README.md\" ]\n\t},\n}\n",
        "meta": {
            "title": "create new git commit",
            "highlight": "3"
        },
        "group": "git"
    },
    {
        "name": "clone_repository",
        "contract": "Rule unknown ignore\n\nGiven I connect to 'url' and send path 'path' and clone repository\n\nGiven I have a 'string' named 'cloned_repository'\nThen print the data\n",
        "keys": "{\n\t\"url\": \"https://github.com/dyne/slangroom\",\n\t\"path\": \"slangroom\"\n}\n",
        "data": "{\n\t\"cloned_repository\": \"true\"\n}\n",
        "meta": {
            "title": "clone repository",
            "highlight": "3"
        },
        "group": "git"
    },
    {
        "name": "set",
        "contract": "Rule unknown ignore\n\nGiven I send object 'object' and send path 'path' and send value 'value' and manipulate and set\n\nGiven I have a 'string dictionary' named 'object'\nThen print 'mimmo'\n",
        "keys": "{\n\t\"path\": \"root.element\"\n}\n",
        "data": "{\n\t\"value\": { \"name\": \"Jhon\" },\n\t\"object\": {\n\t\t\"surname\": \"Doe\"\n\t}\n}\n",
        "meta": {
            "title": "manipulate and set",
            "highlight": "3"
        },
        "group": "helpers"
    },
    {
        "name": "pick",
        "contract": "Rule unknown ignore\n\nGiven I send object 'object' and send properties 'properties' and manipulate and pick and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the data\n",
        "keys": "{\n\t\"properties\": [\n\t\t\"name\",\n\t\t\"personal_information.email.first\"\n\t]\n}\n",
        "data": "{\n\t\"object\": {\n\t\t\"name\": \"Jhon\",\n\t\t\"personal_information\": {\n\t\t\t\"email\": {\n\t\t\t\t\"first\": \"example@example.org\",\n\t\t\t\t\"second\": \"email@example.org\"\n\t\t\t},\n\t\t\t\"phone\": \"3338957823\"\n\t\t}\n\t}\n}\n",
        "meta": {
            "title": "manipulate and pick",
            "highlight": "3"
        },
        "group": "helpers"
    },
    {
        "name": "omit",
        "contract": "Rule unknown ignore\n\nGiven I send object 'object' and send paths 'paths' and manipulate and omit and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the data\n",
        "keys": "{\n\t\"path\": [\n\t\t\"names.third\",\n\t\t\"surnames.second\"\n\t]\n}\n",
        "data": "{\n\t\"object\": {\n\t\t\"names\": {\n\t\t\t\"first\": \"Bella\",\n\t\t\t\"third\": \"Owen\"\n\t\t},\n\t\t\"surnames\": {\n\t\t\t\"first\": \"Allen\",\n\t\t\t\"second\": \"Briggs\"\n\t\t}\n\t}\n}\n",
        "meta": {
            "title": "manipulate and omit",
            "highlight": "3"
        },
        "group": "helpers"
    },
    {
        "name": "merge",
        "contract": "Rule unknown ignore\n\nGiven I send object 'object' and send sources 'sources' and manipulate and merge and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the data\n",
        "keys": "{\n\t\"sources\": [\n\t\t{\n\t\t\t\"names\": {\n\t\t\t\t\"second\": \"Jhon\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"surnames\": {\n\t\t\t\t\"third\": \"Doe\"\n\t\t\t}\n\t\t}\n\t]\n}\n",
        "data": "{\n\t\"object\": {\n\t\t\"names\": {\n\t\t\t\"first\": \"Bella\",\n\t\t\t\"third\": \"Owen\"\n\t\t},\n\t\t\"surnames\": {\n\t\t\t\"first\": \"Allen\",\n\t\t\t\"second\": \"Briggs\"\n\t\t}\n\t}\n}\n",
        "meta": {
            "title": "manipulate and merge",
            "highlight": "3"
        },
        "group": "helpers"
    },
    {
        "name": "get",
        "contract": "Rule unknown ignore\n\nGiven I send object 'object' and send path 'path' and manipulate and get and output into 'result'\n\nGiven I have a 'string' named 'result'\nThen print the data\n",
        "keys": "{\n\t\"the_path\": \"root.element\"\n}\n",
        "data": "{\n\t\"object\": {\n\t\t\"root\": {\n\t\t\t\"element\": \"value\"\n\t\t}\n\t}\n}\n",
        "meta": {
            "title": "manipulate and get",
            "highlight": "3"
        },
        "group": "helpers"
    },
    {
        "name": "concat",
        "contract": "Rule unknown ignore\n\nGiven I send array 'array' and send values 'values' and manipulate and concat and output into 'result'\n\nGiven I have a 'string array' named 'result'\nThen print the data\n",
        "keys": "{\n\t\"values\": [\n\t\t\"third\",\n\t\t\"foruth\",\n\t\t\"fifth\"\n\t]\n}\n",
        "data": "{\n    \"array\": [\n\t\t\"first\",\n\t\t\"second\"\n\t]\n}\n",
        "meta": {
            "title": "manipulate and concat",
            "highlight": "3"
        },
        "group": "helpers"
    },
    {
        "name": "compact",
        "contract": "Rule unknown ignore\n\nGiven I send array 'array' and manipulate and compact and output into 'result'\n\nGiven I have a 'string array' named 'result'\nThen print the data\n",
        "keys": "{}\n",
        "data": "{\n\t\"the_array\": [\n\t\t0,\n\t\t\"c\",\n\t\tfalse,\n\t\t\"d\",\n\t\t\"\"\n\t]\n}\n",
        "meta": {
            "title": "manipulate and compact",
            "highlight": "3"
        },
        "group": "helpers"
    },
    {
        "name": "post_with_headers",
        "contract": "Rule unknown ignore\nGiven I connect to 'address' and send object 'body' and send headers 'headers' and do post and output into 'result'\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
        "keys": "{\n\t\"address\": \"https://dyne.org/slangroom\"\n}\n",
        "data": "{\n\t\"body\": {\n\t\t\"hello\": \"world\"\n\t},\n\t\"headers\": {\n\t\t\"Content-Type\": \"application/json\"\n\t}\n}\n",
        "meta": {
            "title": "http post with header",
            "highlight": "2"
        },
        "group": "http"
    },
    {
        "name": "post",
        "contract": "Rule unknown ignore\nGiven I connect to 'address' and send object 'body' and do post and output into 'result'\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
        "keys": "{\n\t\"address\": \"https://dyne.org/slangroom\"\n}\n",
        "data": "{\n\t\"body\": {\n\t\t\"hello\": \"world\"\n\t}\n}\n",
        "meta": {
            "title": "http post",
            "highlight": "2"
        },
        "group": "http"
    },
    {
        "name": "get_with_headers",
        "contract": "Rule unknown ignore\nGiven I connect to 'address' and send headers 'headers' and do get and output into 'result'\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
        "keys": "{\n\t\"address\": \"https://dyne.org/slangroom\"\n}\n",
        "data": "{\n\t\"headers\": {\n\t\t\"Content-Type\": \"application/json\"\n\t}\n}\n",
        "meta": {
            "title": "http get with headers",
            "highlight": "2"
        },
        "group": "http"
    },
    {
        "name": "validate",
        "contract": "Rule unknown ignore\n\nGiven I send json_data 'json_data' and send json_schema 'json_schema' and validate json and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
        "keys": "{\n\t\"json_schema\": {\n\t\t\"type\": \"object\",\n\t\t\"properties\": {\n\t\t\t\"first_name\": {\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t\"last_name\": {\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t},\n\t\t\"required\": [\n\t\t\t\"first_name\",\n\t\t\t\"last_name\"\n\t\t]\n\t}\n}\n",
        "data": "{\n    \"json_data\": {\n        \"first_name\": \"Jhon\",\n        \"last_name\": \"Doe\"\n    }\n}\n",
        "meta": {
            "title": "validate json",
            "highlight": "3"
        },
        "group": "json-schema"
    },
    {
        "name": "replace",
        "contract": "Rule unknown ignore\n\nGiven I send url 'url' and replace the current location\n\nGiven nothing\nThen print data\n",
        "keys": "{}\n",
        "data": "{\n    \"url\": \"https://example.com\"\n}\n",
        "meta": {
            "title": "replace the current location",
            "highlight": "3"
        },
        "group": "location"
    },
    {
        "name": "reload",
        "contract": "Rule unknown ignore\n\nGiven I reload the current page\n\nGiven nothing\nThen print data\n",
        "keys": "{}\n",
        "data": "{}\n",
        "meta": {
            "title": "reload the page",
            "highlight": "3"
        },
        "group": "location"
    },
    {
        "name": "redirect",
        "contract": "Rule unknown ignore\n\nGiven I send url 'url' and redirect to the url\n\nGiven nothing\nThen print data\n",
        "keys": "{}\n",
        "data": "{\n    \"url\": \"https://example.com\"\n}\n",
        "meta": {
            "title": "redirect to the url",
            "highlight": "3"
        },
        "group": "location"
    },
    {
        "name": "new_window",
        "contract": "Rule unknown ignore\n\nGiven I send url 'url' and open the url in a new window\n\nGiven nothing\nThen print data\n",
        "keys": "{}\n",
        "data": "{\n    \"url\": \"https://example.com\"\n}\n",
        "meta": {
            "title": "open the url in a new window",
            "highlight": "3"
        },
        "group": "location"
    },
    {
        "name": "location",
        "contract": "Rule unknown ignore\n\n# this reutrn the window.location object\n# singular element of location can be obtained by adding\n# the reuqest element, i.e. href, protocol, host, hostname, port,\n# pathname, search params, hash, after 'location' like\n# Given I get the current location href and output into 'result'\n\nGiven I get the current location and output into 'location'\n\nGiven I have a 'string dictionary' named 'location'\nThen print data\n",
        "keys": "{}\n",
        "data": "{}\n",
        "meta": {
            "title": "get the current location",
            "highlight": "9"
        },
        "group": "location"
    },
    {
        "name": "history_length",
        "contract": "Rule unknown ignore\n\nGiven I get the history length and output into 'history_length'\n\nGiven I have a 'number' named 'history_length'\nThen print data\n",
        "keys": "{}\n",
        "data": "{}\n",
        "meta": {
            "title": "get the history length",
            "highlight": "3"
        },
        "group": "location"
    },
    {
        "name": "go_to_index",
        "contract": "Rule unknown ignore\n\nGiven send index 'index' and I go to a specific page in history\n\nGiven nothing\nThen print data\n",
        "keys": "{}\n",
        "data": "{\n    \"index\": -1\n}\n",
        "meta": {
            "title": "go to a specific page in history",
            "highlight": 3
        },
        "group": "location"
    },
    {
        "name": "go_forward",
        "contract": "Rule unknown ignore\n\nGiven I go forward in history\n\nGiven nothing\nThen print data\n",
        "keys": "{}\n",
        "data": "{}\n",
        "meta": {
            "title": "go forward in history",
            "highlight": "3"
        },
        "group": "location"
    },
    {
        "name": "go_back",
        "contract": "Rule unknown ignore\n\nGiven I go back in history\n\nGiven nothing\nThen print data\n",
        "keys": "{}\n",
        "data": "{}\n",
        "meta": {
            "title": "go back in history",
            "highlight": "3"
        },
        "group": "location"
    },
    {
        "name": "assign",
        "contract": "Rule unknown ignore\n\nGiven I send url 'url' and assign the current location\n\nGiven nothing\nThen print data\n",
        "keys": "{}\n",
        "data": "{\n    \"url\": \"https://example.com\"\n}\n",
        "meta": {
            "title": "assign the current location",
            "highlight": "3"
        },
        "group": "location"
    },
    {
        "name": "update_record",
        "contract": "Rule unknown ignore\n\nGiven I connect to 'pb_address' and start pb client\nGiven I send my_credentials 'my_credentials' and login\n\nGiven I send update_parameters 'update_parameters' and send record_parameters 'record_parameters' and update record and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
        "keys": "{\n\t\"pb_address\": \"http://127.0.0.1:8090\",\n\t\"my_credentials\": {\n\t\t\"email\": \"test@test.eu\",\n\t\t\"password\": \"testtest\"\n\t}\n}\n",
        "data": "{\n\t\"update_parameters\": {\n\t\t\"id\": \"q3vijjsacrn32tk\",\n\t\t\"collection\": \"organizations\",\n\t\t\"record\": {\n\t\t\t\"name\": \"new value for name\"\n\t\t}\n\t},\n\t\"record_parameters\": {\n\t\t\"fields\": \"id, name\"\n\t}\n}\n",
        "meta": {
            "title": "update a record",
            "highlight": "6"
        },
        "group": "pocketbase"
    },
    {
        "name": "start_pb",
        "contract": "Rule unknown ignore\n\nGiven I connect to 'pb_address' and start pb client and output into 'result'\n# for mobile contracts use instead\n# Given I connect to 'pb_address' and start capacitor pb client and output into 'result'\n\nGiven I have a 'string' named 'result'\nThen print the 'result'\n",
        "keys": "{\n\t\"pb_address\": \"http://127.0.0.1:8090\"\n}\n",
        "data": "{}\n",
        "meta": {
            "title": "start pb client",
            "highlight": "3"
        },
        "group": "pocketbase"
    },
    {
        "name": "send_request",
        "contract": "Rule unknown ignore\n\nGiven I connect to 'pb_address' and start pb client\n\nGiven I send url 'url' and send send_parameters 'send_parameters' and send request and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
        "keys": "{\n\t\"pb_address\": \"http://127.0.0.1:8090\"\n}\n",
        "data": "{\n\t\"url\": \"/api/hello/user\",\n\t\"send_parameters\": {}\n}\n",
        "meta": {
            "title": "send request",
            "highlight": "5"
        },
        "group": "pocketbase"
    },
    {
        "name": "refresh_token",
        "contract": "Rule unknown ignore\n\nGiven I connect to 'pb_address' and start capacitor pb client and output into 'result'\n\nGiven I refresh token and output into 'refresh_output'\n\nGiven I have a 'string dictionary' named 'refresh_output'\nThen print data\n",
        "keys": "{\n\t\"pb_address\": \"http://127.0.0.1:8090\"\n}\n",
        "data": "{}\n",
        "meta": {
            "title": "refresh token",
            "highlight": "5"
        },
        "group": "pocketbase"
    },
    {
        "name": "pw_reset",
        "contract": "Rule unknown ignore\n\nGiven I connect to 'pb_address' and start pb client\nGiven I send my_credentials 'my_credentials' and login\n\nGiven I send email 'email' and ask password reset and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
        "keys": "{\n\t\"pb_address\": \"http://127.0.0.1:8090\",\n\t\"my_credentials\": {\n\t\t\"email\": \"test@test.eu\",\n\t\t\"password\": \"testtest\"\n\t}\n}\n",
        "data": "{\n\t\"email\": \"test@test.eu\"\n}\n",
        "meta": {
            "title": "password reset",
            "highlight": "6"
        },
        "group": "pocketbase"
    },
    {
        "name": "login",
        "contract": "Rule unknown ignore\n\nGiven I connect to 'pb_address' and start pb client\n\nGiven I send my_credentials 'my_credentials' and login and output into 'result'\n\nGiven I have a 'string' named 'result'\nThen print the 'result'\n",
        "keys": "{\n\t\"pb_address\": \"http://127.0.0.1:8090\"\n}\n",
        "data": "{\n\t\"my_credentials\": {\n\t\t\"email\": \"test@test.eu\",\n\t\t\"password\": \"testtest\"\n\t}\n}\n",
        "meta": {
            "title": "login",
            "highlight": "5"
        },
        "group": "pocketbase"
    },
    {
        "name": "get_some_records",
        "contract": "Rule unknown ignore\n\nGiven I connect to 'pb_address' and start pb client\n\nGiven I send list_parameters 'list_parameters' and get some records and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
        "keys": "{\n\t\"pb_address\": \"http://127.0.0.1:8090\"\n}\n",
        "data": "{\n\t\"list_parameters\": {\n\t\t\"type\": \"list\",\n\t\t\"pagination\": {\n\t\t\t\"page\": 2,\n\t\t\t\"perPage\": 20\n\t\t},\n\t\t\"collection\": \"organizations\"\n\t}\n}\n",
        "meta": {
            "title": "get some records",
            "highlight": "5"
        },
        "group": "pocketbase"
    },
    {
        "name": "get_one_record",
        "contract": "Rule unknown ignore\n\nGiven I connect to 'pb_address' and start pb client\n\nGiven I send show_parameters 'show_parameters' and get one record and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
        "keys": "{\n\t\"pb_address\": \"http://127.0.0.1:8090\"\n}\n",
        "data": "{\n\t\"show_parameters\": {\n\t\t\"collection\": \"organizations\",\n\t\t\"id\": \"p7viyzsihrn52uj\",\n\t\t\"fields\": \"name\"\n\t}\n}\n",
        "meta": {
            "title": "get one record",
            "highlight": "5"
        },
        "group": "pocketbase"
    },
    {
        "name": "delete_record",
        "contract": "Rule unknown ignore\n\nGiven I connect to 'pb_address' and start pb client\nGiven I send my_credentials 'my_credentials' and login\n\nGiven I send delete_parameters 'delete_parameters' and delete record and output into 'result'\n\nGiven I have a 'string' named 'result'\nThen print the 'result'\n",
        "keys": "{\n\t\"pb_address\": \"http://127.0.0.1:8090\",\n\t\"my_credentials\": {\n\t\t\"email\": \"test@test.eu\",\n\t\t\"password\": \"testtest\"\n\t}\n}\n",
        "data": "{\n\t\"delete_parameters\": {\n\t\t\"collection\": \"organizations\",\n\t\t\"id\": \"q3vijjsacrn32tk\"\n\t}\n}\n",
        "meta": {
            "title": "delete a record",
            "highlight": "6"
        },
        "group": "pocketbase"
    },
    {
        "name": "create_record",
        "contract": "Rule unknown ignore\n\nGiven I connect to 'pb_address' and start pb client\nGiven I send my_credentials 'my_credentials' and login\n\nGiven I send create_parameters 'create_parameters' and send record_parameters 'record_parameters' and create record and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
        "keys": "{\n\t\"pb_address\": \"http://127.0.0.1:8090\",\n\t\"my_credentials\": {\n\t\t\"email\": \"test@test.eu\",\n\t\t\"password\": \"testtest\"\n\t}\n}\n",
        "data": "{\n\t\"create_parameters\": {\n\t\t\"collection\": \"organizations\",\n\t\t\"record\": {\n\t\t\t\"name\": \"Jhon org\"\n\t\t}\n\t},\n\t\"record_parameters\": {\n\t\t\"requestKey\": \"testCreate\"\n\t}\n}\n",
        "meta": {
            "title": "create a record",
            "highlight": "6"
        },
        "group": "pocketbase"
    },
    {
        "name": "qr_code",
        "contract": "Rule unknown ignore\n\nGiven I send text 'text' and create qr code and output into 'result'\n\nGiven I have a 'string' named 'result'\nThen print the 'result'\n",
        "keys": "{}\n",
        "data": "{\n    \"text\": \"Hello World!\"\n}\n",
        "meta": {
            "title": "create qr code",
            "highlight": "3"
        },
        "group": "qrcode"
    },
    {
        "name": "fetch_timestamp",
        "contract": "Rule unknown ignore\n\nGiven I fetch the local timestamp in seconds and output into 'result_in_seconds'\nGiven I fetch the local timestamp in milliseconds and output into 'result_in_milliseconds'\n\nGiven I have a 'string' named 'result_in_seconds'\nGiven I have a 'string' named 'result_in_milliseconds'\nThen print the 'result_in_seconds'\nThen print the 'result_in_milliseconds'\n",
        "keys": "{}\n",
        "data": "{}\n",
        "meta": {
            "title": "fetch the local timestamp",
            "highlight": "3-4"
        },
        "group": "timestamp"
    },
    {
        "name": "execute_zencode",
        "contract": "Rule unknown ignore\n\nGiven I send keys 'keys' and send data 'data' and send script 'script' and execute zencode and output into 'result'\n\nGiven I have a 'string dictionary' named 'result'\nThen print the 'result'\n",
        "keys": "{\n\t\"zencode\": \"Scenario 'ecdh': Create the public key\\nGiven I have the 'keyring'\\nWhen I create the ecdh public key\\nThen print the 'ecdh public key'\\n\",\n\t\"data\": {}\n}\n",
        "data": "{\n\t\"keys\": {\n\t\t\"keyring\": {\n\t\t\t\"ecdh\": \"FJ5Esc1koLSH+9pKSdI65tcyH2HowzXMe0UdsqktmZU=\"\n\t\t}\n\t}\n}\n",
        "meta": {
            "title": " execute zencode",
            "highlight": "3"
        },
        "group": "zencode"
    }
]